option_settings:
 aws:elasticbeanstalk:container:python:
   WSGIPath: application.py
 aws:elasticbeanstalk:application:environment:
   LC_ALL: en_US.utf8
   FLASK_APP: application.py
   FLASK_ENV: development
#Below Line is Commented out, as it requires an AWS arn SSL Certificate to use HTTPS. Uncomment and replace with your own SSL Certificate if you want HTTPS enabled
# aws:elbv2:listener:443:
#   ListenerEnabled: 'true'
#   Protocol: HTTPS
#   SSLCertificateArns: arn:aws:acm:SSL-CERTIFICATE-ARN-HERE
files:
  "/etc/httpd/conf.d/wsgi_custom.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      WSGIApplicationGroup %{GLOBAL}
  "/etc/httpd/conf.d/cors.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      <Location "/">
        Header set Access-Control-Allow-Origin: *
        Header set Access-Control-Allow-Methods: "POST, GET, PUT, DELETE, OPTIONS"
        Header add Access-Control-Allow-Headers: "Authorization, Content-Type, Accept"
        Header set Access-Control-Allow-Credentials: true
 
        SetOutputFilter DEFLATE
      </Location>
  #This is required for CORS to work properly. This HAS NOT been uploaded on the server, but installed directly on the elastic beanstalk server using an SSH connection to the EB CLI. If this option throws an error, delete it and make the changes manually.
  "/var/www/html/.htaccess":
    mode: "000644"
    owner: root
    group: root
    content: |
      <IfModule setenvif.c>
        <FilesMatch ".(ttf|otf|eot|woff|woff2)$">
          <IfModule mod_headers.c>
            SetEnvIf Origin "http(s)?://(www.)?(omega2020.netlify.app|sudomega.com)$" AccessControlAllowOrigin=$0
            Header add Access-Control-Allow-Origin %{AccessControlAllowOrigin}e env=AccessControlAllowOrigin
            Header merge Vary Origin
          </IfModule>
        </FilesMatch>
      </IfModule>

#If there are any errors after a successful deployment using the .htaccess file, namely if it says that there are modules missing, then the following two lines must be added to /etc/httpd/conf/httpd.conf:
# LoadModule headers_module modules/mod_headers.so
# LoadModule setenvif_module modules/mod_setenvif.c